w(wake): 2秒周期程度でゆすって表示。

Reality 0: 線:細線、棒:細線、円:細線、多角形:細線。
Reality 1: 棒を長方形枠線で描く。塗りなし。
Reality 2: 多角形と円を半透明に描く。枠線あり。棒はべた塗り。
Reality 3: べた塗りで描く。枠線なし。
Reality 4: ベタ塗り+黒枠線。
細線は太さ可変。
枠線は極細線で描画色。
棒は円と同じように太さが指定される。
円は細線でふちどられる。
oはマーカーのようなものなので、塗りつぶしなし。常に細線。

平成14年12月5日(木)パレットのその場指定だけが大域的なのは変な気がする。
というより、たぶん 途中で変更するとまずいので、その場指定はファイルの
先頭でしかできない、という規則にした方がよい。

平成14年12月5日(木)一番時間がかかっているのは、quick sort。しかし、こ
れ以上高速化するのは難しい。GLなどを使えば、おそらくz-bufferを使用する
ので、quicksortの時間がまるまる空くことになり、相当高速化できるはず。
そろそろそういう路線に乗りかえてもよいのではないか？

$Id: ToDo,v 1.9 2008-04-07 04:05:40 matto Exp $
$Log: ToDo,v $
Revision 1.9  2008-04-07 04:05:40  matto
Reality expressions are a little bit modified. Display in reality level 2..4 will be improved when many lines, stick, and polygons are there.

Revision 1.8  2003/04/25 02:25:33  matto
*** empty log message ***

Revision 1.7  2002/01/22 06:48:03  matto
automakeに対応。

Revision 1.6  2001/07/18 03:40:56  matto
Compiled on windows, too.

Revision 1.5  2001/07/16 08:09:16  matto
OS- and GUI- dependent codes are separated.

Revision 1.4  2001/07/16 02:22:42  matto
Redrawing action is refined.

Revision 1.3  2001/06/16 07:50:24  matto
Jerky motion is refined.

Revision 1.2  1999/08/25 03:40:55  matto
This is the real first edition of Yaplot 2.

Revision 1.10  1999/08/24 10:09:11  matto
Crawling mode is disabled.

Revision 1.9  1999/08/24 08:34:56  matto
re-indented.

Revision 1.8  1999/08/24 08:25:40  matto
Hash is renewed.
Accuracy is introduced.

Revision 1.7  1999/08/24 03:26:55  matto
Zoom ratio can be specified independently for each window.

Revision 1.6  1999/08/24 01:00:46  matto
CVS test from flash memory card.

Revision 1.5  1999/08/20 03:39:59  matto
yaplot.c is divided.

Revision 1.4  1999/08/19 12:47:05  matto
*** empty log message ***

Revision 1.3  1999/03/08 04:34:32  matto
quick sort is replaced and became faster.
event management becomes a little bit smarter.

Revision 1.2  1998/10/15 07:37:11  matto
variable length array is introduced for primitives.

Revision 1.1.1.1  1998/09/28 04:40:47  matto
First release of Yaplot

Revision 1.1  1998/09/04 03:29:03  matto
Initial revision




Postscript出力

希望のフレームを、希望の解像度、希望の描画品位、希望のアングルで出力し
たい。あとで編集することを考えれば、tgifでも出力できればさらによい。ス
ナップショットの出力は、対話操作の場合のみ可能とする。

gif、動画形式での出力

画面表示よりはきれいにしたい。倍サイズで表示して、フィルタで縮小するようにする。

camera action description

時間軸については、2種類の表現がありうる
時間軸をパラメータとしない場合：
時間軸も含めてパラメータ指定できるようにする場合
時間軸をパラメータにすると、まきもどしなどが簡単にできるようになる。

重心運動は最終的にはスプラインで指定できるようにする。
回転運動は直線的でもかまわないだろう。
時刻も直線的とする。

数値の羅列で十分表現できる。
高度な記述方法を使えるようにする必要はないと思う。

カメラの位置は3変数で表現する。(対象物との相対座標にするか、絶対座標にするか)
fov(field of view)変数1つ
カメラの向きはEuler,Quaternion,(Eyep-Lookp-Up)の3通りが考えられる。内部ではすべて回転行列で扱い、回転軸を求めて微少回転を積分する)
実時間と、フレーム番号を明記する。
"*" wildcardは補間を意味する。

出力は、通常のyaplot windowか、animated gif。
出力がおわったら、対話操作にもどるようにしておく。


現在よりも格段に高速化したければ、座標計算(座標の回転)の最適化をすれば
よい。中間ファイルを作るのも高速化するには有効だろう。あらかじめバック
グラウンドで入力ファイルを内部形式に変換してキャッシュ(あるいは中間ファ
イル)に保管しておけば、アニメーション、回転とも速くできる。<p>

ダブルバッファリングをちゃんと実装すれば、多分もっとはやくできる。
pixmapに描いていると、ハードウェア高速化が効かないのでは？<p>

平成１０年１０月１４日(水)まちがって、mol3pの方をチューニングしてしまっ
た。

平成１０年１０月１５日(木)yaplotのチューニング完了。可変長配列を導入し、
必要最小限のメモリで動くようにした。これで、cacheが容易にできる。

平成１０年１０月１５日(木)キャッシュを実装。若干回転がスムーズになる。

平成１０年１０月１５日(木)標準入力からのデータがうまくキャッシュできな
い。

平成１０年１０月１６日(金)feofを使って、ファイルの読み込み途上かどうか
を確認する？feofはたしか正確な結果を返さないはず。




平成１１年８月１９日(木)改良案

奥行きの変更
平成１１年８月１９日(木)すでに導入した。shift+"/"とshift+"*"でパースを
変えられるようにした。

layerの概念を導入したい。
平成１１年８月１９日(木)済"y"コマンドを新設し、
function keyを利用するようにした。

verbose度の設定
平成１１年８月１９日(木)済"v"キーを定義した。

数字を組みあわせたアクションをもっと増やす。

installをもうすこし単純にする。

座標はいまは各オブジェクトが独立に保持しているが、これは一元化してしまっ
た方がいいのでは？(そうすれば同一座標の縮約が簡単になる)
座標を縮約する場合に、どれぐらいの精度を保証するかが問題になる。読み込
みの時にあらかじめ桁を制限しておき、同一の座標かどうかは完全一致で評価
することにすれば、Hashを使用できるので、照合による速度低下をさけられる。
通常は下3桁もあれば十分だと思う。
Hashは読み込み時にのみ使用し、すぐに開放してしまえばよい。
平成１１年８月１９日(木)上を実現するために、まず各Vertexの情報から、半
径情報を除き、代わりにzoom比情報を導入した。これで、Vertexは共有可能に
なった。
平成１１年８月２０日(金)Hashを導入した。Hash関数が重いので、読み込みが
遅くなったが、cacheしてしまえば問題はない。

lineにpolylineを追加したい。polygonの場合には点の数を与えているが、
lineの場合にはどうするんだ？'l'や's'の仕様を拡張するのではなく、新たな
コマンドを決めた方がよいと思う。

ソートする時はpolygonと同様、最初の点の位
置のみで評価する？それともちゃんと重心をとるか。重心をとるようにすれば
xwingはもっとちゃんと表示されるはず。
平成１１年８月２０日(金)すでに重心で計算していた。

realityの使い方、描画エレメントの整理(oなど)

色を直接指定できてもいいのではないか？

キャッシュが使用できるのであれば、データサイズがもう少し大きくなっても
よいだろう。layerを使用する場合、不要な座標変換をなくす。
平成１１年８月２４日(火)済み

*と/のアクションは視野角をいじらずに単に拡大率を変更するようにしてほし
い。そして常にasyncとする。
平成１１年８月２４日(火)済み

カメラアクションの追加
時間送りはsplineするときもちわるいので、時間はlinearのみとする。カメラ
の運動はsplineで補間する。

カメラアクションを登録するために、カメラ移動モードの追加。カーソルや*/
の挙動を変更する。
1999/8/23 Done
asyncモードとおりあわないのでとりあえずcrawling modeは抹消した。

文字を装飾できるようにしたい。センタリングなども

2次元グラフィックモードがあってもよい。

対象物を回すのは、本来おかしい。データに含まれない回転をyaplotが行う必
要はない。回転ができるなら並進もできるべきだ、ということになると制御変
数が増えすぎる。カメラの方を回すようにしてはどうか？
1999/8/23 Done

どの部分がもっとも時間がかかっているのかを調べよ。
Hash関数が複雑
平成１１年８月２４日(火)改善した。

ハッシュの効率を評価できないか？
Sort不必要にデータを交換しているように思う。

複数の画面を同時制御できるようにしたい。
1999/8/23 Done
独立にも制御できるようにしたい。そのためには、AinfoやGinfoの内容の多くを
Winfoに移して大幅に書き換えなければいけない。だいたいメドは付いているが。
平成１１年８月２４日(火)ほぼ完了
画面サイズの変更は常にasync、それ以外はasyncモードのウィンドウでのアク
ションは他のウィンドウに影響しないが、syncモードのウィンドウでのアクショ
ンはすべてのウィンドウに反映される。

画面上に表示されるverboseメッセージは他の窓にすべきではないか？
平成１１年８月２４日(火)一部は他の窓にわけることも可能だが、大抵の情報
はasyncでは窓毎に違う値を保持することができるので、メッセージ用の窓を
作る必要は今はない。

標準入力がうまくcacheできていない。標準入力の場合はfile名に"-"が指定さ
れているわけだから簡単に判別できる。標準入力の場合には、キャッシュを最
大化し、スキップ読み込みを禁じる。

視野の外の点はクリップしてほしい
1999/8/23 Done

クリップする範囲を調節したい。

XPointを全プリミティブ分保存しておく必要はない。

精度を導入したい。
平成１１年８月２４日(火)とりあえず#defineの形で導入した。

メモリ使用量を最適化してほしい。

Casheの効率を改善
先読など。

描画途中で割り込みが入った場合でも、すべての窓の運動がsyncすることを保
証しなければいけない。
マウスによるドラッグなどでは、大量の割り込みがはいってくる。その度に処
理を中断していたのでは、スムーズに表示できないし、上の問題にもからんで
いる。

quitが遅くなったのはなぜ？

平成13年6月15日(金)
表示エレメントが少ない方がぎくしゃくするのはおかしい。
volvicで、丸を*描かない*時だけぎくしゃくする。なんじゃそれ。

XPendingを頻繁に呼びすぎていたことが判明。
あと、マウスによる回転時(autorotateがオフの時)は、割り込みを禁止して、描画処理が終わった直後のマウスの状態を参照して次のアクションを決めた方がよい。Event drivenにしてしまうとあまりに割り込みが多くなりすぎるのでエレメントが多い時にスムーズに回転できない。

もし割り込みは全部禁止して、バッファ内のイベントを毎度まとめて処理するようにしたらどうなる？

10キー操作を追加する。
unimplemented keys:
c
f

non-repeatable keys:
q,break
v
home
end
space
pause
s
plus
minus
tab
Fnc

repeatable key:
page down,n,N
page up,p
bracketright,bracketleft
*
/
left
right
up
down
insert
delete

new keys:
G,return

平成13年7月16日(月)
GTKへ移行する。2、3日以内にWinでの稼働を目指す。

平成13年7月16日(月)
とりあえずおおざっぱにos依存の部分とgui依存の部分をわけた。
あまり高度なGUIの機能を使うと移植が難しくなるのでさけろ。

平成13年7月18日(水)
paletteをその場設定できるように、@コマンドを拡張する。
@ palette番号 [r g b]
r,g,bは0から255までの値、出てきた順にパレットを変更し、ウィンドウごとに別個に管理する。そのため、masterpaletteはウィンドウごとに必要になる。

平成13年7月23日(月)
automakeに対応した。
DEC OSF/1で不動

平成14年1月22日(火)
GNOME化を行う。

とりあえずmainのおきかえ。
